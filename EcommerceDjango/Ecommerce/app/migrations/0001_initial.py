# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-14 11:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('brandname', models.CharField(db_column='BrandName', max_length=100, primary_key=True, serialize=False)),
                ('branddescription', models.CharField(blank=True, db_column='BrandDescription', max_length=200, null=True)),
                ('productid', models.IntegerField(db_column='ProductId')),
            ],
            options={
                'db_table': 'Brand',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Categories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('description', models.CharField(blank=True, db_column='Description', max_length=300, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=45, null=True)),
                ('feedbackdate', models.DateTimeField(blank=True, db_column='FeedbackDate', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('feedbackid', models.AutoField(db_column='FeedbackId', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Feedback',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Loginformation',
            fields=[
                ('idloginformation', models.AutoField(db_column='idLogInformation', primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=45, null=True)),
                ('ipaddress', models.CharField(blank=True, db_column='IpAddress', max_length=45, null=True)),
                ('executiontime', models.CharField(blank=True, db_column='ExecutionTime', max_length=45, null=True)),
                ('dateofrequest', models.CharField(blank=True, db_column='DateOfRequest', max_length=100, null=True)),
                ('httpstatus', models.CharField(blank=True, db_column='HttpStatus', max_length=45, null=True)),
                ('parameters', models.CharField(blank=True, db_column='Parameters', max_length=300, null=True)),
                ('requesttype', models.CharField(blank=True, db_column='RequestType', max_length=45, null=True)),
            ],
            options={
                'db_table': 'loginformation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrderHasProduct',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('quantityordered', models.IntegerField(blank=True, db_column='QuantityOrdered', null=True)),
                ('price', models.FloatField(blank=True, db_column='Price', null=True)),
            ],
            options={
                'db_table': 'Order_has_Product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderId', primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('dateoforder', models.CharField(blank=True, db_column='DateOfOrder', max_length=100, null=True)),
                ('orderdate', models.DateField(blank=True, db_column='OrderDate', null=True)),
                ('dataoforder', models.CharField(blank=True, db_column='DataOfOrder', max_length=255, null=True)),
                ('availability', models.TextField(blank=True, db_column='Availability', null=True)),
            ],
            options={
                'db_table': 'Orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('paymentid', models.AutoField(db_column='PaymentId', primary_key=True, serialize=False)),
                ('mode', models.CharField(blank=True, db_column='Mode', max_length=45, null=True)),
                ('amount', models.FloatField(blank=True, db_column='Amount', null=True)),
                ('order_orderid', models.ForeignKey(blank=True, db_column='Order_OrderId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Orders')),
            ],
            options={
                'db_table': 'Payment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='ProductId', primary_key=True, serialize=False)),
                ('cost', models.IntegerField(blank=True, db_column='Cost', null=True)),
                ('productdescription', models.CharField(blank=True, db_column='ProductDescription', max_length=2000, null=True)),
                ('sellingprice', models.IntegerField(blank=True, db_column='SellingPrice', null=True)),
                ('productname', models.CharField(blank=True, db_column='ProductName', max_length=2000, null=True)),
                ('availability', models.TextField(blank=True, db_column='Availability', null=True)),
                ('productcode', models.CharField(blank=True, db_column='ProductCode', max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('categoryid', models.ForeignKey(blank=True, db_column='CategoryId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Categories')),
            ],
            options={
                'db_table': 'Product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.AutoField(db_column='UserId', primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=200, null=True)),
                ('contactfirstname', models.CharField(blank=True, db_column='ContactFirstName', max_length=200, null=True)),
                ('contactlastname', models.CharField(blank=True, db_column='ContactLastName', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=100, null=True)),
                ('addressline1', models.CharField(blank=True, db_column='AddressLine1', max_length=500, null=True)),
                ('addressline2', models.CharField(blank=True, db_column='AddressLine2', max_length=500, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=100, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=100, null=True)),
                ('postalcode', models.IntegerField(blank=True, db_column='PostalCode', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=100, null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='orders',
            name='fkuserid',
            field=models.ForeignKey(blank=True, db_column='FkUserId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.User'),
        ),
        migrations.AddField(
            model_name='orderhasproduct',
            name='orderid',
            field=models.ForeignKey(db_column='OrderId', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Orders'),
        ),
        migrations.AddField(
            model_name='orderhasproduct',
            name='productid',
            field=models.ForeignKey(db_column='ProductId', on_delete=django.db.models.deletion.DO_NOTHING, to='app.Product'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='UserId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.User'),
        ),
        migrations.AlterUniqueTogether(
            name='orderhasproduct',
            unique_together=set([('orderid', 'productid')]),
        ),
    ]
