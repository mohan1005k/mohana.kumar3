# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-13 17:42
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('brandname', models.CharField(db_column='BrandName', max_length=100, primary_key=True, serialize=False)),
                ('branddescription', models.CharField(blank=True, db_column='BrandDescription', max_length=200, null=True)),
                ('productid', models.IntegerField(db_column='ProductId')),
            ],
            options={
                'db_table': 'Brand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('description', models.CharField(blank=True, db_column='Description', max_length=300, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=45, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=45, null=True)),
                ('feedbackdate', models.DateTimeField(blank=True, db_column='FeedbackDate', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('feedbackid', models.AutoField(db_column='FeedbackId', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loginformation',
            fields=[
                ('idloginformation', models.AutoField(db_column='idLogInformation', primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=45, null=True)),
                ('ipaddress', models.CharField(blank=True, db_column='IpAddress', max_length=45, null=True)),
                ('executiontime', models.CharField(blank=True, db_column='ExecutionTime', max_length=45, null=True)),
                ('dateofrequest', models.CharField(blank=True, db_column='DateOfRequest', max_length=100, null=True)),
                ('httpstatus', models.CharField(blank=True, db_column='HttpStatus', max_length=45, null=True)),
                ('parameters', models.CharField(blank=True, db_column='Parameters', max_length=300, null=True)),
                ('requesttype', models.CharField(blank=True, db_column='RequestType', max_length=45, null=True)),
            ],
            options={
                'db_table': 'loginformation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderHasProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantityordered', models.IntegerField(blank=True, db_column='QuantityOrdered', null=True)),
                ('price', models.FloatField(blank=True, db_column='Price', null=True)),
            ],
            options={
                'db_table': 'Order_has_Product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderId', primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('dateoforder', models.CharField(blank=True, db_column='DateOfOrder', max_length=100, null=True)),
                ('orderdate', models.DateTimeField(blank=True, db_column='OrderDate', null=True)),
                ('dataoforder', models.CharField(blank=True, db_column='DataOfOrder', max_length=255, null=True)),
                ('availability', models.TextField(blank=True, db_column='Availability', null=True)),
            ],
            options={
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('paymentid', models.AutoField(db_column='PaymentId', primary_key=True, serialize=False)),
                ('mode', models.CharField(blank=True, db_column='Mode', max_length=45, null=True)),
                ('amount', models.FloatField(blank=True, db_column='Amount', null=True)),
            ],
            options={
                'db_table': 'Payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='ProductId', primary_key=True, serialize=False)),
                ('cost', models.IntegerField(blank=True, db_column='Cost', null=True)),
                ('productdescription', models.CharField(blank=True, db_column='ProductDescription', max_length=2000, null=True)),
                ('sellingprice', models.IntegerField(blank=True, db_column='SellingPrice', null=True)),
                ('productname', models.CharField(blank=True, db_column='ProductName', max_length=2000, null=True)),
                ('availability', models.TextField(blank=True, db_column='Availability', null=True)),
                ('productcode', models.CharField(blank=True, db_column='ProductCode', max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
            ],
            options={
                'db_table': 'Product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.AutoField(db_column='UserId', primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=200, null=True)),
                ('contactfirstname', models.CharField(blank=True, db_column='ContactFirstName', max_length=200, null=True)),
                ('contactlastname', models.CharField(blank=True, db_column='ContactLastName', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=100, null=True)),
                ('addressline1', models.CharField(blank=True, db_column='AddressLine1', max_length=500, null=True)),
                ('addressline2', models.CharField(blank=True, db_column='AddressLine2', max_length=500, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=100, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=100, null=True)),
                ('postalcode', models.IntegerField(blank=True, db_column='PostalCode', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=100, null=True)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
    ]
